{"version":3,"sources":["components/AddTask.js","components/AddUser.js","components/UserTable.js","components/Nav.js","components/TaskTable.js","pages/User.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","props","state","userId","content","deadline","handleChanges","bind","event","target","value","name","this","setState","preventDefault","token","localStorage","getItem","changeNav","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","status","catch","error","console","log","userList","style","display","flexDirection","className","htmlFor","onChange","border","map","user","id","type","onClick","handleSubmit","React","Component","AddUser","username","birth","phone","cell","email","password","role","file","a","json","data","message","formData","FormData","append","requestOptionsImage","code","files","UserTable","deleteUser","deleteUserOptions","people","updateUsers","users","scope","person","src","photoPath","alt","Nav","logoff","clear","redirectRoute","navButtons","to","navItem","TaskTable","updateTaskOptions","updateTasks","tasks","taskList","task","index","Admin","nav","selectedNav","Login","responseStatus","responseData","setItem","action","defaultValue","autoComplete","required","placeholder","App","exact","path","component","User","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9eb7df5d.chunk.js","sourcesContent":["import React from 'react';\n\nclass AddTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: '',\n      content: '',\n      deadline: '',\n    };\n    this.handleChanges = this.handleChanges.bind(this);\n  }\n\n  handleChanges(event) {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const token = localStorage.getItem('token')\n    const { userId, content, deadline } = this.state;\n    const { changeNav } = this.props\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' , 'Authorization': token },\n      body: JSON.stringify({\n        userId,\n        content,\n        deadline,\n      }),\n    }\n    fetch('https://xcelis.herokuapp.com/task', requestOptions)\n    .then(response => {\n      if (response.status === 201) {\n        changeNav('task');\n      }\n    })\n    .catch(error => console.log(error));\n  }\n\n  render() {\n    const { userId, content, deadline} = this.state;\n    const { userList } = this.props;\n    return (\n      <form \n      style={{display: 'flex', flexDirection: 'column'}}\n      className=\"mt-8 space-y-6 min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div>\n          <label htmlFor=\"userId\" className=\"block text-sm font-medium text-gray-700\">\n            Usuário\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n          <select\n            name=\"userId\"\n            value={userId}\n            onChange={ (event) => this.handleChanges(event)}\n            style={{border: \"solid black 1px\"}}\n            className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n          >{\n              userList.map((user) => {\n                return(<option value={user.id}>{user.name}</option>)\n              })\n            }\n          </select>\n        </div>\n        </div>\n        <div>\n          <label htmlFor=\"deadline\" className=\"block text-sm font-medium text-gray-700\">\n            Prazo de entrega\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              type=\"date\"\n              name=\"deadline\"\n              value={deadline}\n              onChange={ (event) => this.handleChanges(event)}\n              style={{border: \"solid black 1px\"}}\n              className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n            />\n          </div>\n        </div>\n        <div>\n          <label htmlFor=\"content\" className=\"block text-sm font-medium text-gray-700\">\n            Tarefa\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              type=\"text\"\n              name=\"content\"\n              value={content}\n              onChange={ (event) => this.handleChanges(event)}\n              style={{border: \"solid black 1px\"}}\n              className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n            />\n          </div>\n        </div>\n        <button\n              type=\"submit\"\n              className=\"group flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              onClick={ (event) => this.handleSubmit(event)}\n            >\n              Adicionar\n            </button>\n      </form>\n    \n    );\n  }\n}\n\nexport default AddTask;","import React from 'react';\n\nclass AddUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      birth: '',\n      phone: '',\n      cell: '',\n      email: '',\n      password: '',\n      role: 'admin',\n      file: null\n    };\n    this.handleChanges = this.handleChanges.bind(this);\n  }\n\n  handleChanges(event) {\n    const { value, name } = event.target;\n    this.setState({ \n      [name]: value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const token = localStorage.getItem('token')\n    const { username, birth, phone, cell, email, password, role, file } = this.state;\n    const { changeNav } = this.props\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' , 'Authorization': token },\n      body: JSON.stringify({\n        name: username,\n        birth,\n        phone,\n        cell,\n        email,\n        password,\n        role,\n      }),\n    }\n    let response;\n    await fetch('https://xcelis.herokuapp.com/user', requestOptions)\n    .then(response => response.json())\n    .then(data => {\n      response = data;\n      })\n    .catch(error => {\n      console.log(error.message)\n    });\n    const formData = new FormData();\n\t\tformData.append('image', file);\n    const requestOptionsImage = {\n      method: 'POST',\n      headers: { 'Authorization': token },\n      body: formData,\n    }\n    if (response) {\n      fetch(`https://xcelis.herokuapp.com/user/${response.id}`, requestOptionsImage)\n      .then(response => {\n        if (response.code === 200) {\n          changeNav('users');\n        }\n      })\n      .catch(error => {\n        console.log(error.message)\n      });\n    }\n  }\n\n  render() {\n    const { username, birth, phone, cell, email, password, role } = this.state;\n    return (\n      <form \n      style={{display: 'flex', flexDirection: 'column'}}\n      className=\"mt-8 space-y-6 min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div>\n          <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\n            Nome\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={ (event) => this.handleChanges(event)}\n              style={{border: \"solid black 1px\"}}\n              className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n            />\n          </div>\n        </div>\n        <div>\n          <label htmlFor=\"birth\" className=\"block text-sm font-medium text-gray-700\">\n            Data de Nascimento\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              type=\"date\"\n              name=\"birth\"\n              value={birth}\n              onChange={ (event) => this.handleChanges(event)}\n              style={{border: \"solid black 1px\"}}\n              className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n            />\n          </div>\n        </div>\n        <div>\n          <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">\n            Telefone\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              type=\"number\"\n              name=\"phone\"\n              value={phone}\n              onChange={ (event) => this.handleChanges(event)}\n              style={{border: \"solid black 1px\"}}\n              className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n            />\n          </div>\n        </div>\n        <div>\n          <label htmlFor=\"cell\" className=\"block text-sm font-medium text-gray-700\">\n            Celular\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              type=\"number\"\n              name=\"cell\"\n              value={cell}\n              onChange={ (event) => this.handleChanges(event)}\n              style={{border: \"solid black 1px\"}}\n              className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n            />\n          </div>\n        </div>\n        <div>\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n            Email\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={ (event) => this.handleChanges(event)}\n              style={{border: \"solid black 1px\"}}\n              className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n            />\n          </div>\n        </div>\n        <div>\n          <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n            Senha\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              type=\"text\"\n              name=\"password\"\n              value={password}\n              onChange={ (event) => this.handleChanges(event)}\n              style={{border: \"solid black 1px\"}}\n              className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n            />\n          </div>\n          <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700\">\n            Role\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n          <select\n            name=\"role\"\n            value={role}\n            onChange={ (event) => this.handleChanges(event)}\n            style={{border: \"solid black 1px\"}}\n            className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n          >\n            <option value='admin'>admin</option>\n            <option value='user'>user</option>\n          </select>\n        </div>\n        </div>\n        <div>\n          <label htmlFor=\"file\" className=\"block text-sm font-medium text-gray-700\">\n            Profile picture\n          </label>\n          <div className=\"mt-1 relative rounded-md shadow-sm\">\n            <input\n              type=\"file\"\n              name=\"file\"\n              onChange={ (event) => this.setState({file: event.target.files[0]})}\n              style={{border: \"solid black 1px\"}}\n              className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n            />\n          </div>\n        </div>\n        <button\n              type=\"submit\"\n              className=\"group flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              onClick={ (event) => this.handleSubmit(event)}\n            >\n              Adicionar\n            </button>\n      </form>\n    \n    );\n  }\n}\n\nexport default AddUser;","import React from 'react';\n\nclass UserTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      people:[],\n    };\n    this.deleteUser = this.deleteUser.bind(this);\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const { updateUsers } = this.props;\n    const getusersoptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' , 'Authorization': token },\n    }\n\n    fetch('https://xcelis.herokuapp.com/user', getusersoptions)\n    .then(response => response.json())\n    .then(data => {\n      updateUsers(data.users);\n    })\n    .catch(error => {\n      console.log(error)\n    });\n  }\n\n  deleteUser = (id) => {\n    const token = localStorage.getItem('token');\n    const { changeNav } = this.props\n    const deleteUserOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' , 'Authorization': token },\n    }\n    fetch(`https://xcelis.herokuapp.com/user/${id}`, deleteUserOptions)\n    .then(response => response.json())\n    .catch(error => {\n      console.log(error)\n    });\n    changeNav('users');\n    \n  }\n\nrender() {\n  const { userList } = this.props;\n  return (\n    <div className=\"flex flex-col\">\n    <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n      <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n        <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Name\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Role\n                </th>\n                <th scope=\"col\" className=\"relative px-6 py-3\">\n                  <span className=\"sr-only\">Edit</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {userList.map((person) => (\n                <tr key={person.email}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <div className=\"flex-shrink-0 h-10 w-10\">\n                        <img className=\"h-10 w-10 rounded-full\" src={person.photoPath} alt=\"\" />\n                      </div>\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">{person.name}</div>\n                        <div className=\"text-sm text-gray-500\">{person.email}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{person.role}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button\n                      type='button'\n                      className=\"text-red-600\"\n                      onClick={() => this.deleteUser(person.id)}\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  )}\n}\n\nexport default UserTable;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectRoute:'',\n    };\n    this.logoff = this.logoff.bind(this);\n  }\nlogoff = () => {\n  localStorage.clear();\n  this.setState({\n    redirectRoute: '/login',\n  })\n}\nrender() {\n  const { user, navButtons, changeNav } = this.props\n  const { redirectRoute } = this.state;\n  return (\n    redirectRoute? <Redirect to={`${redirectRoute}`}/> :\n    <nav className=\"bg-gray-800 flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n      <div className= 'text-gray-300 px-3 py-2 rounded-md text-sm font-medium'>{`Bem vindo ${user}`}</div>\n      <div className=\"flex space-x-4\">\n        {navButtons? navButtons.map((navItem) => {\n            return( <button className='text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium'\n              onClick={() => changeNav(navItem.value)}\n            >\n              {navItem.name}\n            </button>)\n          }) : <>Loading</>\n        }\n      </div>\n      <button className='text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium'\n      onClick={(()=> this.logoff())}\n      >logoff</button>\n    </nav>\n  )}\n}\n\nexport default Nav;","import React from 'react';\n\nclass TaskTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChanges = this.handleChanges.bind(this);\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const { updateTasks } = this.props;\n    const getusersoptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' , 'Authorization': token },\n    }\n\n    fetch('https://xcelis.herokuapp.com/task', getusersoptions)\n    .then(response => response.json())\n    .then(data => {\n      updateTasks(data.tasks);\n    })\n    .catch(error => {\n      console.log(error)\n    });\n  }\n\n  handleChanges = (event, id) => {\n    const token = localStorage.getItem('token');\n    const updateTaskOptions = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' , 'Authorization': token },\n      body: JSON.stringify({\n        status: event.target.value,\n      })\n    }\n    fetch(`https://xcelis.herokuapp.com/task/${id}`, updateTaskOptions)\n    .then(response => response.json())\n    .catch(error => {\n      console.log(error)\n    });\n  }\n\nrender() {\n  const { taskList } = this.props;\n  const role = localStorage.getItem('role');\n  return (\n    <div className=\"flex flex-col\">\n    <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n      <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n        <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Usuario\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Tarefa\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Prazo\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                >\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {taskList.map((task, index) => (\n                <tr key={index}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">{task.username}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{task.content}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{task.deadline}</td>\n                  { role === 'user'? \n                  <select\n                    name=\"userId\"\n                    value={task.status}\n                    onChange={ (event) => this.handleChanges(event, task.id)}\n                    style={{border: \"solid black 1px\"}}\n                    className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-2 pr-12 sm:text-sm border-indigo-500  rounded-md\"\n                  >\n                    <option value='pending'>Pendente</option>)\n                    <option value='complete'>Terminado</option>)\n                  </select>\n                  : <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{task.status}</td>\n                  }\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  )}\n}\n\nexport default TaskTable;","import React from 'react';\nimport AddTask from '../components/AddTask';\nimport AddUser from '../components/AddUser';\nimport UserTable from '../components/UserTable';\nimport Nav from '../components/Nav';\nimport TaskTable from '../components/TaskTable';\n\n\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: '',\n      userId: '',\n      role:'',\n      taskList: [],\n      userList: [],\n      navButtons: [],\n      selectedNav: '',\n    };\n    this.updateUsers = this.updateUsers.bind(this);\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const role = localStorage.getItem('role');\n    if (token) {\n      const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' , 'Authorization': token },\n      }\n\n      fetch('https://xcelis.herokuapp.com/login', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          user: data.name,\n          role:data.role,\n          userId: data.userId,\n        });\n        if (data.role === 'admin') {\n          this.setState({\n            navButtons: [\n              {name: 'Usuários', value: 'users'},\n              {name: 'Novo Usuários', value: 'addUser'},\n              {name: 'Tarefas', value: 'tasks'},\n              {name: 'Nova Tarefa', value: 'addTask'},\n            ],\n            selectedNav: 'users',\n          });\n        }\n        if (data.role === 'user') {\n          this.setState({\n            navButtons: [\n              {name: 'Tarefas', value: 'tasks'},\n            ],\n            selectedNav: 'tasks',\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    }\n    if (role === 'admin') {\n      const getusersoptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' , 'Authorization': token },\n      }\n  \n      fetch('https://xcelis.herokuapp.com/user', getusersoptions)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          userList: data.users,\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    }\n\n    const getTaskOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' , 'Authorization': token },\n    }\n    fetch('https://xcelis.herokuapp.com/task', getTaskOptions)\n    .then(response => response.json())\n    .then(data => {\n      this.setState({\n        taskList: data.tasks,\n      })\n    })\n    .catch(error => {\n      console.log(error)\n    });\n  }\n\n  changeNav = (nav) => {\n    this.setState({\n      selectedNav: nav\n    })\n  }\n\n  updateUsers = (users) => {\n    this.setState({\n      userList: users\n    })\n  }\n\n  updateTasks = (tasks) => {\n    this.setState({\n      taskList: tasks\n    })\n  }\n\n  render() {\n    const { user, navButtons, selectedNav, userList, taskList } = this.state;\n    switch (selectedNav) {\n      case ('addUser'):\n        return (\n          <div>\n            <Nav user={user} navButtons={navButtons} changeNav={this.changeNav}/>\n            <AddUser changeNav={this.changeNav}/>\n          </div>\n         );\n         case ('addTask'):\n          return (\n            <div>\n              <Nav user={user} navButtons={navButtons} changeNav={this.changeNav}/>\n              <AddTask changeNav={this.changeNav} userList={userList}/>\n            </div>\n           );\n           case ('users'):\n            return (\n              <div>\n                <Nav user={user} navButtons={navButtons} changeNav={this.changeNav}/>\n                <UserTable userList={userList} updateUsers={this.updateUsers} changeNav={this.changeNav}/>\n              </div>\n             );\n      default:\n        return (\n          <div>\n            <Nav user={user} navButtons={navButtons} changeNav={this.changeNav}/>\n            <TaskTable taskList={taskList} updateTasks={this.updateTasks} />\n          </div>\n         );\n    }\n  }\n}\n\nexport default Admin;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      redirectRoute:'',\n    };\n    this.handleChanges = this.handleChanges.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount () {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const requestOptions = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' , 'Authorization': token },\n      }\n\n      fetch('https://xcelis.herokuapp.com/login', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          redirectRoute: '/user'\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      });\n    }\n  }\n\n  handleChanges(event) {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { email, password } = this.state;\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    }\n    let responseStatus;\n    let responseData;\n    \n    await fetch('https://xcelis.herokuapp.com/login', requestOptions)\n    .then(response => {\n      responseStatus = response.status;\n      return response.json();\n    })\n    .then(data => responseData = data)\n    .catch(error => {\n      console.log(error)\n    });\n\n    if (responseStatus === 200) {\n      localStorage.setItem('token', responseData.token);\n      localStorage.setItem('role', responseData.role);\n      this.setState({\n        redirectRoute: '/user'\n      })\n    }\n  }\n\n  render() {\n    const { email, password, redirectRoute } = this.state;\n    return (\n      redirectRoute? <Redirect to={`${redirectRoute}`}/> :\n      <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email-address\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                id=\"email-address\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Email address\"\n                value={email}\n                onChange={ (event) => this.handleChanges(event)}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={ (event) => this.handleChanges(event)}\n              />\n            </div>\n          </div>\n          <div>\n            <button\n              type=\"submit\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              onClick={ (event) => this.handleSubmit(event)}\n            >\n              Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default Login;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport User from './pages/User';\nimport Login from './pages/Login';\n\nfunction App() {\n  return (\n    <Switch>\n    <Route exact path=\"/\" component={ Login } />\n    <Route exact path=\"/login\" component={ Login  } />\n    <Route exact path=\"/user\" component={ User } />\n  </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}